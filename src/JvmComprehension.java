public class JvmComprehension {

    public static void main(String[] args) {
        int i = 1;                      // 1 +
        Object o = new Object();        // 2 +
        Integer ii = 2;                 // 3 +
        printAll(o, i, ii);             // 4 +
        System.out.println("finished"); // 7
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5 +
        System.out.println(o.toString() + i + ii);  // 6 +
    }
}
//        Новый класс JvmComprehension отдаётся для загрузки в систему загрузчиков классов. Есть 3 класс-лоадэра
//        работающих в ленивом режиме, в них поочереди передаётся новый класс - Application ClassLoader->
//        Platform ClassLoader->Bootstrap ClassLoader. Последний загружает переданный класс. Если он не находит нужный
//        класс в библиотеке java, то он делегирует поиск класса обратно по цепочке вниз. Если ниодин ClassLoader не
//        нашёл нужный класс, то Application ClassLoader выбрасывает ClassNotFoundException. Класс подгружается в
//        Metaspace где хранятся данные о классе и константы.
        //1 В стеке создаётся фрейм для метода main и туда заносится примитивная переменная типа int, ссылка на неё
//        и присваемое значение.
        //2 Создаётся объект Object и заносится в кучу, а ссылка на этот объект заносится в фрейм метода main,
//        но ссылается на Object находящийся в куче.
        //3 Класс-обёртка Integer заносится в кучу, а его ссылка и значение заносятся в фрейм метода main, но ссылаются
//        на Integer из кучи.
        //4 В момент вызова метода создаётся отдельный фрейм с названием этого метода в стеке памяти куда вносятся все
//        аргументы этого метода. Эти аргументы ссылаются на свой Объект, примитивный тип и класс-обёртку из кучи.
//        После полного выполнения метода фрейм с ним из стека удаляется.
        //5 Создаётся класс-обёртка Integer и заносится в кучу, его ссылка и значение заносятся в фрейм метода printAll
//        и ссылаются на Integer из кучи.
        //6 Создастся новый фрейм System.out.println в стеке метода printAll и в него заносятся переменные i и ii.
//        ii ссылается в кучу на
//        класс-обёртку Integer.
        //7 Фреймы printAll и System.out.println удаляются из стека, а с ними и переменная uselessVar.
//        Создастся новый фрейм System.out.println в стеке и создаётся новая строка "finished" в пуле строк, который
//        находится в куче.